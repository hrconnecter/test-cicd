name: CICD-pipeline

on:
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Debug: List directory contents
        run: ls -R

      - name: Run Selected Selenium Tests in headless mode
        env:
          GITHUB_ACTIONS: true
        run: |
          echo "Running tests headlessly"
          cd aegis  # Navigate to the folder where pom.xml exists
          CHROME_ARGS="--headless=new --no-sandbox --disable-dev-shm-usage --window-size=1920,1080"
          mvn clean test -Dtest=essential.LoginLogout,essential.AddDepartment,essential.EmployeeOnboarding,enterprise.ExpenseManagement,basic.Form16 | tee full-test-output.txt || true
          echo "================ EXTRACTING CUSTOM TEST RESULTS ================="
          awk '/^={20,}/ {flag=1; print; next}
               flag {print}
               /^✅|❌/ {print; flag=0}' full-test-output.txt > Selenium-test-report.txt
          echo "================ PARSING RESULTS ================="
          summary_line=$(grep "Tests run:" full-test-output.txt | tail -1 || echo "No test summary found.")
          echo "Test Summary: $summary_line"
          total=$(echo "$summary_line" | grep -oP 'Tests run: \K[0-9]+' || echo 0)
          failures=$(echo "$summary_line" | grep -oP 'Failures: \K[0-9]+' || echo 0)
          errors=$(echo "$summary_line" | grep -oP 'Errors: \K[0-9]+' || echo 0)
          skipped=$(echo "$summary_line" | grep -oP 'Skipped: \K[0-9]+' || echo 0)
          passed=$((total - failures - errors))
          if [ "$total" -eq 0 ]; then
            percent=0
          else
            percent=$((passed * 100 / total))
          fi
          {
            echo ""
            echo "========== VALIDATION SUMMARY =========="
            echo "📊 Total: $total, Passed: $passed, Failures: $failures, Errors: $errors, Skipped: $skipped, Passed %: $percent"
            if [ "$percent" -ge 80 ]; then
              echo "✅ Test pass percentage ($percent%) is acceptable. Proceeding."
            else
              echo "❌ Test pass percentage ($percent%) is below threshold (80%). Failing workflow."
              exit 1
            fi
          } >> selenium-test-report

      - name: 📦 Upload validation summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-validation-summary
          path: aegis/selenium-test-report

      - name: 📧 Send email with test report
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.hostinger.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: GitHub Actions - Selenium Test Report
          to: yash.shirke@argantechnology.com
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            Hi Yash,
            Please find attached the latest Selenium test summary report from GitHub Actions.
            Regards,  
            GitHub CI/CD Bot
          attachments: aegis/selenium-test-report




# name: CICD-pipeline

# on:
#   workflow_dispatch:

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           java-version: '17'
#           distribution: 'temurin'

#       - name: Run Selected Selenium Tests in headless mode
#         env:
#           GITHUB_ACTIONS: true
#         run: |
#           echo "Running tests headlessly"
#           CHROME_ARGS="--headless=new --no-sandbox --disable-dev-shm-usage --window-size=1920,1080"

#           # Run tests and save full Maven output
#           mvn clean test -Dtest=essential.LoginLogout,essential.AddDepartment,essential.EmployeeOnboarding,enterprise.ExpenseManagement,basic.Form16 | tee full-test-output.txt || true

#           echo "================ EXTRACTING CUSTOM TEST RESULTS ================="
#           awk '/^={20,}/ {flag=1; print; next}
#                flag {print}
#                /^✅|❌/ {print; flag=0}' full-test-output.txt > Selenium-test-report.txt

#           echo "================ PARSING RESULTS ================="
#           summary_line=$(grep "Tests run:" full-test-output.txt | tail -1 || echo "No test summary found.")
#           echo "Test Summary: $summary_line"

#           total=$(echo "$summary_line" | grep -oP 'Tests run: \K[0-9]+' || echo 0)
#           failures=$(echo "$summary_line" | grep -oP 'Failures: \K[0-9]+' || echo 0)
#           errors=$(echo "$summary_line" | grep -oP 'Errors: \K[0-9]+' || echo 0)
#           skipped=$(echo "$summary_line" | grep -oP 'Skipped: \K[0-9]+' || echo 0)
#           passed=$((total - failures - errors))
#           if [ "$total" -eq 0 ]; then
#             percent=0
#           else
#             percent=$((passed * 100 / total))
#           fi

#           {
#             echo ""
#             echo "========== VALIDATION SUMMARY =========="
#             echo "📊 Total: $total, Passed: $passed, Failures: $failures, Errors: $errors, Skipped: $skipped, Passed %: $percent"
#             if [ "$percent" -ge 80 ]; then
#               echo "✅ Test pass percentage ($percent%) is acceptable. Proceeding."
#             else
#               echo "❌ Test pass percentage ($percent%) is below threshold (80%). Failing workflow."
#               exit 1
#             fi
#           } >> selenium-test-report

#       - name: 📦 Upload validation summary
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: test-validation-summary
#           path: selenium-test-report

#       - name: 📧 Send email with test report
#         if: always()
#         uses: dawidd6/action-send-mail@v3
#         with:
#           server_address: smtp.hostinger.com
#           server_port: 465
#           username: ${{ secrets.EMAIL_USERNAME }}
#           password: ${{ secrets.EMAIL_PASSWORD }}
#           subject: GitHub Actions - Selenium Test Report
#           to: yash.shirke@argantechnology.com
#           from: ${{ secrets.EMAIL_USERNAME }}
#           body: |
#             Hi Yash,
#             Please find attached the latest Selenium test summary report from GitHub Actions.
#             Regards,  
#             GitHub CI/CD Bot
#           attachments: selenium-test-report
